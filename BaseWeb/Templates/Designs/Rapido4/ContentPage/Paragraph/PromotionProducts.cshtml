@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>
@using Dynamicweb.Frontend
@using Dynamicweb.Ecommerce.ProductCatalog
@using System.Web

@{ 
    bool isVisualEditor = !string.IsNullOrEmpty(HttpContext.Current.Request.QueryString.Get("VisualEdit")) ? Convert.ToBoolean(HttpContext.Current.Request.QueryString.Get("VisualEdit")) : false;
    string detailsPage = Model.Item.GetString("ProductDetailsPage") != null ? Model.Item.GetString("ProductDetailsPage") : "";
    string listType = Model.Item.GetList("ProductListSource") != null ? Model.Item.GetList("ProductListSource").SelectedValue : "selected";
}

@if (!string.IsNullOrEmpty(Model.Item.GetString("Title"))) {
    <div class="mb-3">
        @RenderPartial("Components/General/ParagraphTitle.cshtml", Model)
    </div>
}

@if (listType == "selected" && Model.Item.GetValue("Products") != null) {
    ProductListViewModel list = Model.Item.GetValue("Products") as ProductListViewModel;

    if (list.Products.Count > 0) { 
        <div class="flex-fill text-left">
            @RenderPartial("ContentProductListPage/Paragraph/Views/GridCompact.cshtml", list, new Dictionary<string, object> { { "productDetailsLink", detailsPage } }) 
        </div>
    } else if (isVisualEditor) {
        <div class="alert alert-dark m-0" role="alert">
            <span><i class="fas fa-info-circle mr-3"></i></span> <span>@Translate("Promotion products: The list will be shown here, if any")</span>
        </div>
    }
}

@if (listType == "sale" && Model.Item.GetValue("SaleProductsFromGroup") != null)
{
    
}