@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>
@using Dynamicweb.Rendering
@using Dynamicweb.Ecommerce.ProductCatalog
@using Dynamicweb.Frontend.Navigation
@using System.Web

@{ 
    bool isVisualEditor = !string.IsNullOrEmpty(HttpContext.Current.Request.QueryString.Get("VisualEdit")) ? Convert.ToBoolean(HttpContext.Current.Request.QueryString.Get("VisualEdit")) : false;

    ProductListViewModel productList = new ProductListViewModel();

    if (System.Web.HttpContext.Current.Items.Contains("ProductList"))
    {
        productList = (ProductListViewModel)System.Web.HttpContext.Current.Items["ProductList"];
    }

    bool facetsFound = false;

    if (productList.FacetGroups != null) {
        foreach (FacetGroupViewModel facetGroup in productList.FacetGroups)
        {
            foreach (FacetViewModel facetItem in facetGroup.Facets)
            {
                foreach (FacetOptionViewModel facetOption in facetItem.Options)
                {
                    if (facetOption.Selected)
                    {
                        facetsFound = true;
                    }
                }
            }
        }
    }

    string url = HttpContext.Current.Request.RawUrl;
    if (!url.Contains("removeMasterLayout")) {
        url += url.Contains("?") ? "&removeMasterLayout=true" : "?removeMasterLayout=true";
    }
}

@if (facetsFound) {
    int facetOptionsCount = 0;

    <form method="post" action="@url" data-response-target-element="content">
        <input type="hidden" name="PageSize" value="9" />

        <div>
            @foreach (FacetGroupViewModel facetGroup in productList.FacetGroups)
            {
                foreach (FacetViewModel facetItem in facetGroup.Facets)
                {
                    foreach (FacetOptionViewModel facetOption in facetItem.Options)
                    {
                        if (facetOption.Selected)
                        {
                            string renderType = facetItem.RenderType;

                            if (renderType == "Colors") {
                                @RenderColorOption(facetItem, facetOption)
                            } else {
                                @RenderCheckboxOption(facetItem, facetOption)
                            }

                            facetOptionsCount++;
                        }
                    }
                }
            }

            @if (facetOptionsCount > 2){ 
                <button type="button" class="btn btn-outline-dark btn-sm" onclick="ProductList.ResetFacets(event)"><i class="fas fa-undo-alt"></i> @Translate("Reset")</button>
            }
        </div>
    </form>
} else if (isVisualEditor) {
    <div class="alert alert-dark m-0" role="alert">
        <span><i class="fas fa-info-circle mr-3"></i></span> <span>@Translate("Facets: The facet selections will be shown here, if any")</span>
    </div>
}


@helper RenderCheckboxOption(FacetViewModel facet, FacetOptionViewModel facetOption) { 
    string selected = facetOption.Selected ? "checked" : "";
    string facetLabel = facetOption.Name;

    if (facetLabel.ToLower() == "true")
    {
        facetLabel = Translate("Yes");
    }

    if (facetLabel.ToLower() == "false")
    {
        facetLabel = Translate("No");
    }

    <label for="Selected_@(Model.ID)_@facetOption.Value">
        <input type="checkbox" class="invisible position-absolute" onclick="ProductList.Update(event)" id="Selected_@(Model.ID)_@facetOption.Value" name="@facet.QueryParameter" value="[@facetOption.Value]" title="@facetOption.Label" @selected />
        <span class="btn btn-outline-dark btn-sm"><i class="fas fa-check"></i> @facetOption.Name</span>
    </label>
}

@helper RenderColorOption(FacetViewModel facet, FacetOptionViewModel facetOption) { 
    string selected = facetOption.Selected ? "checked" : "";
    string facetLabel = facetOption.Name;
    string colorCode = facetOption.Value;

    if (!facetOption.Value.Contains("#")) {
        var variantOption = Dynamicweb.Ecommerce.Services.VariantOptions.GetVariantOption(facetOption.Value.ToString(), Dynamicweb.Ecommerce.Common.Context.LanguageID);
        if (variantOption != null) {
            colorCode = variantOption.LargeImage;
        }
    }

    <label for="Selected_@(Model.ID)_@facetOption.Value">
        <input type="checkbox" onclick="ProductList.Update(event)" class="invisible position-absolute" id="Selected_@(Model.ID)_@facetOption.Value" name="@facet.QueryParameter" value="[@facetOption.Value]" title="@facetOption.Label" @selected />
        <button class="btn btn-outline-dark btn-sm" type="button"><div class="colorbox-icon" style="background-color: @facetOption.Value"></div></button>
    </label>
}