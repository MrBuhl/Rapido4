@inherits ViewModelTemplate<ProductListViewModel>
@using Dynamicweb.Rendering
@using Dynamicweb.Ecommerce.ProductCatalog

@{
    string detailsPageLink = System.Web.HttpContext.Current.Items["DetailsPageLink"] != null ? System.Web.HttpContext.Current.Items["DetailsPageLink"].ToString() : "";

    bool hideProducts = Model.Products == null;

    bool hideNumber = Convert.ToBoolean(Pageview.CurrentParagraph.Item["HideNumber"]);
    bool hideStock = Convert.ToBoolean(Pageview.CurrentParagraph.Item["HideStock"]);
    bool hidePrice = Convert.ToBoolean(Pageview.CurrentParagraph.Item["HidePrice"]);

    bool hideAddToFavorites = Convert.ToBoolean(Pageview.CurrentParagraph.Item["HideAddToFavorites"]);
    bool hideAddToCart = Convert.ToBoolean(Pageview.CurrentParagraph.Item["HideAddToCart"]);
    bool hideViewMore = Convert.ToBoolean(Pageview.CurrentParagraph.Item["HideViewMore"]);

    string headerStyle = Pageview.CurrentParagraph.Item["HeaderStyle"] != null ? Pageview.CurrentParagraph.Item["HeaderStyle"].ToString() : "h3";
    string imageAspectRatio = Pageview.CurrentParagraph.Item["ImageAspectRatio"] != null ? Pageview.CurrentParagraph.Item["ImageAspectRatio"].ToString() : "1-1";
    string imageSize = "width=40&height=40";
    imageSize = imageAspectRatio == "16-9" ? "width=40&height=22" : imageSize;
    imageSize = imageAspectRatio == "9-16" ? "width=40&height=71" : imageSize;
    imageSize = imageAspectRatio == "4-3" ? "width=40&height=30" : imageSize;
    imageSize = imageAspectRatio == "3-4" ? "width=40&height=50" : imageSize;
    string fillCanvas = "";

    if (Pageview.CurrentParagraph.Item["KeepAspectRatio"] != null) {
        fillCanvas = Convert.ToBoolean(Pageview.CurrentParagraph.Item["KeepAspectRatio"]) ? "&fillcanvas=true" : "";
    }

    var detailFieldsDisplayGroups = Pageview.CurrentParagraph.Item["Fields"];
    var displayGroups = "";

    //if (detailFieldsDisplayGroups != null) {
    //    displayGroups = GetLoop("FieldDisplayGroups").Where(x => !detailFieldsDisplayGroups.Contains(x.GetString("Ecom:FieldDisplayGroup.ID")));
    //}

    bool hideUnits = Pageview.CurrentParagraph.Item["HideUnits"] != null ? Convert.ToBoolean(Pageview.CurrentParagraph.Item["HideUnits"]) : false;
    bool hideQuantity = Pageview.CurrentParagraph.Item["HideQuantity"] != null ? Convert.ToBoolean(Pageview.CurrentParagraph.Item["HideQuantity"]) : false;
}

@if (!hideProducts)
{
    <table class="table table-striped table-sm">
        <thead>
            <tr>
                <th scope="col" width="40">&nbsp;</th>
                <th scope="col">@Translate("Name")</th>
                @if (!hideNumber) {
                    <th scope="col">#</th>
                }
                @if (!hideStock) {
                    <th scope="col">@Translate("Stock")</th>
                }
                @if (!hidePrice) {
                    <th scope="col" class="text-right">@Translate("Price")</th>
                }
                @if (!hideAddToCart || !hideViewMore) {
                    <th scope="col" width="120">&nbsp;</th>
                }
                @if (!hideAddToFavorites) {
                    <th scope="col" width="40">&nbsp;</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var product in Model.Products)
            {
                string productLink = detailsPageLink + "&amp;ProductID=" + product.Id;
                hideAddToCart = string.IsNullOrEmpty(product.VariantId) && hideAddToCart ? true : false;

                <tr>
			        <td scope="row" class="position-relative">
                        @{ 
							Dictionary<string, object> stickersSettings = new Dictionary<string, object>();
							stickersSettings.Add("DiscountStickerLayout", Pageview.CurrentParagraph.Item["DiscountStickerLayout"]);
							stickersSettings.Add("NewsStickerLayout", Pageview.CurrentParagraph.Item["NewsStickerLayout"]);
							stickersSettings.Add("CustomStickerLayout", Pageview.CurrentParagraph.Item["CustomStickerLayout"]);
							stickersSettings.Add("DiscountStickerPosition", Pageview.CurrentParagraph.Item["DiscountStickerPosition"]);
							stickersSettings.Add("NewsStickerPosition", Pageview.CurrentParagraph.Item["NewsStickerPosition"]);
							stickersSettings.Add("CustomStickerPosition", Pageview.CurrentParagraph.Item["CustomStickerPosition"]);
						}

						@RenderPartial("Components/Ecommerce/StickersPositioned.cshtml", product, stickersSettings) 
                        <a href="@productLink"><img src="/Files/Images/placeholder.gif" data-src="/Admin/Public/GetImage.ashx?@imageSize&crop=5@(fillCanvas)&image=@product.DefaultImage.Value" class="b-lazy img-fluid"></a>
                    </td>
                    <td class="align-middle">
                        <a href="@productLink" class="text-reset @headerStyle">@product.Name @product.VariantId</a>
                    </td>
                    @if (!hideNumber) {
                        <td class="align-middle"><small>@product.Number</small></td>
                    }
                    @if (!hideStock) {
                        <td class="align-middle">@RenderPartial("Components/Ecommerce/StockInfo.cshtml", product, new Dictionary<string, object> { { "layout", "compact" } })</td>
                    }
                    @if (!hidePrice) {
                        string priceLayout = Pageview.CurrentParagraph.Item["PriceLayout"] != null ? Pageview.CurrentParagraph.Item["PriceLayout"].ToString().ToLower() : "";
                        Dictionary<string, object> priceSettings = new Dictionary<string, object>();
			            priceSettings.Add("PriceLayout", priceLayout);

                        <td class="align-middle text-right">@RenderPartial("Components/Ecommerce/Price.cshtml", product, priceSettings)</td>
                    }
                    @if (!hideAddToCart) {
						<td class="align-middle">@RenderPartial("Components/Ecommerce/AddToCart.cshtml", product, new Dictionary<string, object> { { "layout", "compact" }, { "hideQuantity", hideQuantity }, { "hideUnits", hideUnits } }) </td>
					} else if (!hideViewMore) {
						<td class="align-middle"><a href="@productLink" class="btn btn-primary w-100">@Translate("View")</a></td>
					} 
                    @if (!hideAddToFavorites) {
                        <td class="align-middle px-3">@RenderPartial("Components/Ecommerce/FavoriteListSelect.cshtml", product)</td>
                    }
		        </tr>
            }
        </tbody>
    </table>
}